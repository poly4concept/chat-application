{"version":3,"sources":["components/MyMessage.js","components/TheirMessage.js","components/MessageForm.js","components/ChatFeed.js","components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setvalue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setusername","password","setpassword","error","seterror","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","userSecret","projectID","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba56ec83.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction MyMessage({ message }) {\r\n    if(message?.attachments?.length > 0){\r\n        return (\r\n            <img\r\n            src={message.attachments[0].file}\r\n            alt=\"message\"\r\n            className=\"message-image\"\r\n            style={{float:'right'}}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3b2a50'}}>\r\n           {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage\r\n","import React from 'react'\r\n\r\nfunction TheirMessage({ message, lastMessage }) {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div className=\"message-avatar\"\r\n                    style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n                />\r\n            )}\r\n             {message?.attachments?.length > 0\r\n                ? (\r\n                    <img\r\n                    src={message.attachments[0].file}\r\n                    alt=\"message\"\r\n                    className=\"message-image\"\r\n                    style={{marginLeft: isFirstMessageByUser?'4px' : '48px'}}\r\n                    />\r\n                ): (\r\n                    <div className=\"message\" style={{ float: 'left', backgroundColor: '#cabcdc', marginLeft: isFirstMessageByUser? '4px' : '48px'}}>\r\n                    {message.text}\r\n                    </div>\r\n                )\r\n            }  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage\r\n","import { React, useState } from 'react';\r\nimport { sendMessage, isTyping} from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons'\r\n\r\nfunction MessageForm(props) {\r\n    const [value, setvalue] = useState(\"\")\r\n    const { chatId, creds } = props; \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const text = value.trim();\r\n        if(text.length > 0) sendMessage(creds, chatId, { text });\r\n        setvalue(\"\");\r\n    } \r\n    const handleChange = (event) => {\r\n        setvalue(event.target.value);\r\n        isTyping(props, chatId)\r\n    }\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <form className=\"message-form\" onSubmit={handleSubmit}>\r\n               <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n               />\r\n               <label htmlFor=\"upload button\">\r\n                   <span className=\"image-button\">\r\n                       <PictureOutlined className=\"picture-icon\"/>\r\n                   </span>\r\n               </label>\r\n               <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload}\r\n               />\r\n               <button type=\"submit\" className=\"send-button\">\r\n                   <SendOutlined\r\n                    className=\"send-icon\"\r\n                   />\r\n               </button>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageForm\r\n","import React from 'react';\r\nimport MyMessage from './MyMessage'\r\nimport TheirMessage from './TheirMessage'\r\nimport MessageForm from './MessageForm'\r\n\r\n\r\nfunction ChatFeed(props) {\r\n    const { chats, activeChat, userName, messages} = props;\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div\r\n                key={ `read_${index}` }\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage : `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    } \r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n        return keys.map( ( key, index ) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n            \r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage ? <MyMessage message={message}/> : \r\n                            <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px': '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    if(!chat) return 'loading...';\r\n    return (\r\n        <div className=\"chat-feed\">\r\n           <div className=\"chat-title-container\">\r\n               <div className=\"chat-title\">\r\n                   {chat.title}\r\n               </div>\r\n               <div className=\"chat-subtitle\">\r\n                   {\r\n                       chat.people.map((person) => ` ${person.person.username}`)\r\n                   }\r\n               </div>\r\n           </div>\r\n           {renderMessages()}\r\n           <div style={{ height: '100px' }}/>\r\n           <div className=\"message-form-container\">\r\n               <MessageForm {...props} chatId={activeChat} />\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;\r\n","import { React, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction LoginForm() {\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [error, seterror] = useState('')\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const authObject = { 'Project-ID': \"0279190a-51a8-448b-815d-7e599d953bb8\", 'User-Name': username, 'User-Secret': password }\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', {headers: authObject})\r\n\r\n            localStorage.setItem( 'username', username );\r\n            localStorage.setItem( 'password', password );\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            seterror('Oops, wrong login info');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={ (e) => setusername(e.target.value)} required placeholder=\"Username\" className=\"input\" />\r\n                    <input type=\"password\" value={password} onChange={ (e) => setpassword(e.target.value)} required placeholder=\"Password\" className=\"input\" />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h3 className=\"error\">{error}</h3>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import { ChatEngine } from 'react-chat-engine';\nimport ChatFeed from './components/ChatFeed';\nimport './App.css';\nimport LoginForm from './components/LoginForm';\n\nfunction App() {\n  if(!localStorage.getItem('username')) return <LoginForm/>\n  return (\n    <ChatEngine\n    height=\"100vh\"\n    userName={localStorage.getItem('username')}\n    userSecret={localStorage.getItem('password')}\n    projectID=\"0279190a-51a8-448b-815d-7e599d953bb8\"\n    renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps}/>}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}